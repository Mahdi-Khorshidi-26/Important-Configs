1- the very first step that we're going to take is that 
we need to undrestand that eventhough we have REST API conventions 
and probebly it works perfectly fine there are some set of 
problems like hard coding and so many lines of codes for 
getting an specefic type or a data so graphql will fix this 
bug for us but it needs some basic schema first ;

2-in this step we just learn about
node.js and it's steps of working 
with graphql so we npm init and install :
npm i --save express express-graphql graphql lodash

3- then we creat a file called : server.js 
and put these codes in there :


const express = require("express");
const expressGraphQL = require("express-graphql").graphqlHTTP;
const schema = require("./schema/schema");

const app = express();

app.use(
  "/graphql",
  expressGraphQL({
    schema,
    graphiql: true,
  })
);

app.listen(4000, () => {
  console.log("Listening");
});


4- after that we need to create our schema like below : 
in schema.js : 

const { query } = require("express");
const graphQL = require("graphql");
const _ = require("lodash");
const { GraphQLObjectType, GraphQLString, GraphQLInt, GraphQLSchema } = graphQL;

const users = [
  { id: "23", firstName: "mahdi", age: 20 },
  { id: "47", firstName: "ali", age: 25 },
];

const UserType = new GraphQLObjectType({
  name: "User",
  fields: {
    id: { type: GraphQLString },
    firstName: { type: GraphQLString },
    age: { type: GraphQLInt },
  },
});

const RootQuery = new GraphQLObjectType({
  name: "RootQueryType",
  fields: {
    user: {
      type: UserType,
      args: { id: { type: GraphQLString } },
      resolve(parentValue, args) {
        return _.find(users, { id: args.id });
      },
    },
  },
});

module.exports = new GraphQLSchema({
  query: RootQuery,
});


5- then when we run the server using our cmd : node server.js
we see Listening getting typed and then we mannualy 
type localhost:4000/graphql 
to see the tool that we have for writing some queries ;

6- as an example of a query we go like this :
{
  user(id:"23"){
    id,
    firstName,
    age
  }
}

hit run and see the result;



7- the rest is uploaded as a project to my git hub;












